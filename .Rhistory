}
dataGen7 <- function(N){
M = matrix(c(1, 0.0, 0.2, 0.2,0.2,0.2,0.2,0.2,0.2,
0.0, 1, 0, 0, 0, 0,0,0,0,
0.2, 0, 1, 0, 0, 0,0,0,0,
0.2, 0, 0, 1, 0, 0,0,0,0,
0.2, 0, 0, 0, 1, 0,0,0,0,
0.2, 0, 0, 0, 0, 1,0,0,0,
0.2, 0, 0, 0, 0, 0,1,0,0,
0.2, 0, 0, 0, 0, 0, 0,1,0,
0.2, 0, 0, 0, 0, 0, 0, 0, 1
), nrow=9, ncol=9)
L = chol(M)
nvars = dim(L)[1]
r = t(L) %*% matrix(rnorm(nvars*N), nrow=nvars, ncol=N)
r = t(r)
data = as.data.frame(r)
names(data) = c('y1', 'x1', 'x2', 'x3','x4','x5','x6','x7','x8')
return(data)
}
DataGenListNorm <- list(dataGen1,dataGen2,dataGen3,dataGen4,dataGen5,dataGen6,dataGen7)
#### Everything is normal dist. but with binary H_1 ####
dataGen1 <- function(N){
M = matrix(c(1, 0.2,
0.2, 1
), nrow=2, ncol=2)
L = chol(M)
nvars = dim(L)[1]
r = t(L) %*% matrix(rnorm(nvars*N), nrow=nvars, ncol=N)
r = t(r)
x1<-rbinom(N,1,0.5)
data = as.data.frame(cbind(r,x1))
names(data) = c('y1', 'x2',"x1")
return(data)
}
dataGen2 <- function(N){
M = matrix(c(1, 0.2, 0.2,
0.2, 1, 0,
0.2, 0, 1
), nrow=3, ncol=3)
L = chol(M)
nvars = dim(L)[1]
r = t(L) %*% matrix(rnorm(nvars*N), nrow=nvars, ncol=N)
r = t(r)
x1<-rbinom(N,1,0.5)
data = as.data.frame(cbind(r,x1))
names(data) = c('y1', 'x2', 'x3',"x1")
return(data)
}
dataGen3 <- function(N){
M = matrix(c(1, 0.2, 0.2,0.2,
0.2, 1, 0,0,
0.2, 0, 1,0,
0.2,0,0,1
), nrow=4, ncol=4)
L = chol(M)
nvars = dim(L)[1]
r = t(L) %*% matrix(rnorm(nvars*N), nrow=nvars, ncol=N)
r = t(r)
x1<-rbinom(N,1,0.5)
data = as.data.frame(cbind(r,x1))
names(data) = c('y1', 'x2', 'x3',"x4","x1")
return(data)
}
dataGen4 <- function(N){
M = matrix(c(1, 0.2, 0.2, 0.2,0.2,
0.2, 1, 0, 0,0,
0.2, 0, 1, 0,0,
0.2, 0, 0, 1,0,
0.2, 0, 0, 0, 1), nrow=5, ncol=5)
L = chol(M)
nvars = dim(L)[1]
r = t(L) %*% matrix(rnorm(nvars*N), nrow=nvars, ncol=N)
r = t(r)
x1<-rbinom(N,1,0.5)
data = as.data.frame(cbind(r,x1))
names(data) = c('y1', 'x2', 'x3',"x4","x5","x1")
return(data)
}
dataGen5 <- function(N){
M = matrix(c(1, 0.2, 0.2, 0.2,0.2,0.2,
0.2, 1, 0, 0, 0, 0,
0.2, 0, 1, 0, 0, 0,
0.2, 0, 0, 1, 0, 0,
0.2, 0, 0, 0, 1, 0,
0.2, 0, 0, 0, 0, 1), nrow=6, ncol=6)
L = chol(M)
nvars = dim(L)[1]
r = t(L) %*% matrix(rnorm(nvars*N), nrow=nvars, ncol=N)
r = t(r)
x1<-rbinom(N,1,0.5)
data = as.data.frame(cbind(r,x1))
names(data) = c('y1', 'x2', 'x3',"x4","x5","x6","x1")
return(data)
}
dataGen6 <- function(N){
M = matrix(c(1, 0.2, 0.2, 0.2,0.2,0.2,0.2,
0.2, 1, 0, 0, 0, 0,0,
0.2, 0, 1, 0, 0, 0,0,
0.2, 0, 0, 1, 0, 0,0,
0.2, 0, 0, 0, 1, 0,0,
0.2, 0, 0, 0, 0, 1,0,
0.2, 0, 0, 0, 0, 0,1), nrow=7, ncol=7)
L = chol(M)
nvars = dim(L)[1]
r = t(L) %*% matrix(rnorm(nvars*N), nrow=nvars, ncol=N)
r = t(r)
x1<-rbinom(N,1,0.5)
data = as.data.frame(cbind(r,x1))
names(data) = c('y1', 'x2', 'x3',"x4","x5","x6","x7","x1")
return(data)
}
dataGen7 <- function(N){
M = matrix(c(1, 0.2, 0.2, 0.2,0.2,0.2,0.2,0.2,
0.2, 1, 0, 0, 0, 0,0,0,
0.2, 0, 1, 0, 0, 0,0,0,
0.2, 0, 0, 1, 0, 0,0,0,
0.2, 0, 0, 0, 1, 0,0,0,
0.2, 0, 0, 0, 0, 1,0,0,
0.2, 0, 0, 0, 0, 0,1,0,
0.2, 0, 0, 0, 0, 0, 0,1
), nrow=8, ncol=8)
L = chol(M)
nvars = dim(L)[1]
r = t(L) %*% matrix(rnorm(nvars*N), nrow=nvars, ncol=N)
r = t(r)
x1<-rbinom(N,1,0.5)
data = as.data.frame(cbind(r,x1))
names(data) = c('y1', 'x2', 'x3',"x4","x5","x6","x7","x8","x1")
return(data)
}
DataGenListNormBin <- list(dataGen1,dataGen2,dataGen3,dataGen4,dataGen5,dataGen6,dataGen7)
#### Everything is bin dist. ####
dataGen1 <- function(N){
M = matrix(c(1, 0.2,
0.2, 1
), nrow=2, ncol=2)
L = chol(M)
nvars = dim(L)[1]
r = t(L) %*% matrix(rnorm(nvars*N), nrow=nvars, ncol=N)
r = t(r)
u <- pnorm(r)
y1=r[,1]
x2=qbern(u[,2],0.5)
x1<-rbinom(N,1,0.5)
data = as.data.frame(cbind(y1,x1,x2))
return(data)
}
dataGen2 <- function(N){
M = matrix(c(1, 0.2, 0.2,
0.2, 1, 0,
0.2, 0, 1
), nrow=3, ncol=3)
L = chol(M)
nvars = dim(L)[1]
r = t(L) %*% matrix(rnorm(nvars*N), nrow=nvars, ncol=N)
r = t(r)
u <- pnorm(r)
y1=r[,1]
x2=qbern(u[,2],0.5)
x3=qbern(u[,3],0.5)
x1<-rbinom(N,1,0.5)
data = as.data.frame(cbind(y1,x1,x2,x3))
return(data)
}
dataGen3 <- function(N){
M = matrix(c(1, 0.2, 0.2,0.2,
0.2, 1, 0,0,
0.2, 0, 1,0,
0.2,0,0,1
), nrow=4, ncol=4)
L = chol(M)
nvars = dim(L)[1]
r = t(L) %*% matrix(rnorm(nvars*N), nrow=nvars, ncol=N)
r = t(r)
u <- pnorm(r)
y1=r[,1]
x2=qbern(u[,2],0.5)
x3=qbern(u[,3],0.5)
x4=qbern(u[,4],0.5)
x1<-rbinom(N,1,0.5)
data = as.data.frame(cbind(y1,x1,x2,x3,x4))
return(data)
}
dataGen4 <- function(N){
M = matrix(c(1, 0.2, 0.2, 0.2,0.2,
0.2, 1, 0, 0,0,
0.2, 0, 1, 0,0,
0.2, 0, 0, 1,0,
0.2, 0, 0, 0, 1), nrow=5, ncol=5)
L = chol(M)
nvars = dim(L)[1]
r = t(L) %*% matrix(rnorm(nvars*N), nrow=nvars, ncol=N)
r = t(r)
u <- pnorm(r)
y1=r[,1]
x2=qbern(u[,2],0.5)
x3=qbern(u[,3],0.5)
x4=qbern(u[,4],0.5)
x5=qbern(u[,5],0.5)
x1<-rbinom(N,1,0.5)
data = as.data.frame(cbind(y1,x1,x2,x3,x4,x5))
return(data)
}
dataGen5 <- function(N){
M = matrix(c(1, 0.2, 0.2, 0.2,0.2,0.2,
0.2, 1, 0, 0, 0, 0,
0.2, 0, 1, 0, 0, 0,
0.2, 0, 0, 1, 0, 0,
0.2, 0, 0, 0, 1, 0,
0.2, 0, 0, 0, 0, 1), nrow=6, ncol=6)
L = chol(M)
nvars = dim(L)[1]
r = t(L) %*% matrix(rnorm(nvars*N), nrow=nvars, ncol=N)
r = t(r)
u <- pnorm(r)
y1=r[,1]
x2=qbern(u[,2],0.5)
x3=qbern(u[,3],0.5)
x4=qbern(u[,4],0.5)
x5=qbern(u[,5],0.5)
x6=qbern(u[,6],0.5)
x1<-rbinom(N,1,0.5)
data = as.data.frame(cbind(y1,x1,x2,x3,x4,x5,x6))
return(data)
}
dataGen6 <- function(N){
M = matrix(c(1, 0.2, 0.2, 0.2,0.2,0.2,0.2,
0.2, 1, 0, 0, 0, 0,0,
0.2, 0, 1, 0, 0, 0,0,
0.2, 0, 0, 1, 0, 0,0,
0.2, 0, 0, 0, 1, 0,0,
0.2, 0, 0, 0, 0, 1,0,
0.2, 0, 0, 0, 0, 0,1), nrow=7, ncol=7)
L = chol(M)
nvars = dim(L)[1]
r = t(L) %*% matrix(rnorm(nvars*N), nrow=nvars, ncol=N)
r = t(r)
u <- pnorm(r)
y1=r[,1]
x2=qbern(u[,2],0.5)
x3=qbern(u[,3],0.5)
x4=qbern(u[,4],0.5)
x5=qbern(u[,5],0.5)
x6=qbern(u[,6],0.5)
x7=qbern(u[,7],0.5)
x1<-rbinom(N,1,0.5)
data = as.data.frame(cbind(y1,x1,x2,x3,x4,x5,x6,x7))
return(data)
}
dataGen7 <- function(N){
M = matrix(c(1, 0.2, 0.2, 0.2,0.2,0.2,0.2,0.2,
0.2, 1, 0, 0, 0, 0,0,0,
0.2, 0, 1, 0, 0, 0,0,0,
0.2, 0, 0, 1, 0, 0,0,0,
0.2, 0, 0, 0, 1, 0,0,0,
0.2, 0, 0, 0, 0, 1,0,0,
0.2, 0, 0, 0, 0, 0,1,0,
0.2, 0, 0, 0, 0, 0, 0,1
), nrow=8, ncol=8)
L = chol(M)
nvars = dim(L)[1]
r = t(L) %*% matrix(rnorm(nvars*N), nrow=nvars, ncol=N)
r = t(r)
u <- pnorm(r)
y1=r[,1]
x2=qbern(u[,2],0.5)
x3=qbern(u[,3],0.5)
x4=qbern(u[,4],0.5)
x5=qbern(u[,5],0.5)
x6=qbern(u[,6],0.5)
x7=qbern(u[,7],0.5)
x8=qbern(u[,8],0.5)
x1<-rbinom(N,1,0.5)
data = as.data.frame(cbind(y1,x1,x2,x3,x4,x5,x6,x7,x8))
return(data)
}
DataGenListBin <- list(dataGen1,dataGen2,dataGen3,dataGen4,dataGen5,dataGen6,dataGen7)
#### Everything is bin dist. but with normal H_1 ####
dataGen1 <- function(N){
M = matrix(c(1, 0.2,
0.2, 1
), nrow=2, ncol=2)
L = chol(M)
nvars = dim(L)[1]
r = t(L) %*% matrix(rnorm(nvars*N), nrow=nvars, ncol=N)
r = t(r)
u <- pnorm(r)
y1=r[,1]
x2=qbern(u[,2],0.5)
x1<-rnorm(N)
data = as.data.frame(cbind(y1,x1,x2))
return(data)
}
dataGen2 <- function(N){
M = matrix(c(1, 0.2, 0.2,
0.2, 1, 0,
0.2, 0, 1
), nrow=3, ncol=3)
L = chol(M)
nvars = dim(L)[1]
r = t(L) %*% matrix(rnorm(nvars*N), nrow=nvars, ncol=N)
r = t(r)
u <- pnorm(r)
y1=r[,1]
x2=qbern(u[,2],0.5)
x3=qbern(u[,3],0.5)
x1<-rnorm(N)
data = as.data.frame(cbind(y1,x1,x2,x3))
return(data)
}
dataGen3 <- function(N){
M = matrix(c(1, 0.2, 0.2,0.2,
0.2, 1, 0,0,
0.2, 0, 1,0,
0.2,0,0,1
), nrow=4, ncol=4)
L = chol(M)
nvars = dim(L)[1]
r = t(L) %*% matrix(rnorm(nvars*N), nrow=nvars, ncol=N)
r = t(r)
u <- pnorm(r)
y1=r[,1]
x2=qbern(u[,2],0.5)
x3=qbern(u[,3],0.5)
x4=qbern(u[,4],0.5)
x1<-rnorm(N)
data = as.data.frame(cbind(y1,x1,x2,x3,x4))
return(data)
}
dataGen4 <- function(N){
M = matrix(c(1, 0.2, 0.2, 0.2,0.2,
0.2, 1, 0, 0,0,
0.2, 0, 1, 0,0,
0.2, 0, 0, 1,0,
0.2, 0, 0, 0, 1), nrow=5, ncol=5)
L = chol(M)
nvars = dim(L)[1]
r = t(L) %*% matrix(rnorm(nvars*N), nrow=nvars, ncol=N)
r = t(r)
u <- pnorm(r)
y1=r[,1]
x2=qbern(u[,2],0.5)
x3=qbern(u[,3],0.5)
x4=qbern(u[,4],0.5)
x5=qbern(u[,5],0.5)
x1<-rnorm(N)
data = as.data.frame(cbind(y1,x1,x2,x3,x4,x5))
return(data)
}
dataGen5 <- function(N){
M = matrix(c(1, 0.2, 0.2, 0.2,0.2,0.2,
0.2, 1, 0, 0, 0, 0,
0.2, 0, 1, 0, 0, 0,
0.2, 0, 0, 1, 0, 0,
0.2, 0, 0, 0, 1, 0,
0.2, 0, 0, 0, 0, 1), nrow=6, ncol=6)
L = chol(M)
nvars = dim(L)[1]
r = t(L) %*% matrix(rnorm(nvars*N), nrow=nvars, ncol=N)
r = t(r)
u <- pnorm(r)
y1=r[,1]
x2=qbern(u[,2],0.5)
x3=qbern(u[,3],0.5)
x4=qbern(u[,4],0.5)
x5=qbern(u[,5],0.5)
x6=qbern(u[,6],0.5)
x1<-rnorm(N)
data = as.data.frame(cbind(y1,x1,x2,x3,x4,x5,x6))
return(data)
}
dataGen6 <- function(N){
M = matrix(c(1, 0.2, 0.2, 0.2,0.2,0.2,0.2,
0.2, 1, 0, 0, 0, 0,0,
0.2, 0, 1, 0, 0, 0,0,
0.2, 0, 0, 1, 0, 0,0,
0.2, 0, 0, 0, 1, 0,0,
0.2, 0, 0, 0, 0, 1,0,
0.2, 0, 0, 0, 0, 0,1), nrow=7, ncol=7)
L = chol(M)
nvars = dim(L)[1]
r = t(L) %*% matrix(rnorm(nvars*N), nrow=nvars, ncol=N)
r = t(r)
u <- pnorm(r)
y1=r[,1]
x2=qbern(u[,2],0.5)
x3=qbern(u[,3],0.5)
x4=qbern(u[,4],0.5)
x5=qbern(u[,5],0.5)
x6=qbern(u[,6],0.5)
x7=qbern(u[,7],0.5)
x1<-rnorm(N)
data = as.data.frame(cbind(y1,x1,x2,x3,x4,x5,x6,x7))
return(data)
}
dataGen7 <- function(N){
M = matrix(c(1, 0.2, 0.2, 0.2,0.2,0.2,0.2,0.2,
0.2, 1, 0, 0, 0, 0,0,0,
0.2, 0, 1, 0, 0, 0,0,0,
0.2, 0, 0, 1, 0, 0,0,0,
0.2, 0, 0, 0, 1, 0,0,0,
0.2, 0, 0, 0, 0, 1,0,0,
0.2, 0, 0, 0, 0, 0,1,0,
0.2, 0, 0, 0, 0, 0, 0,1
), nrow=8, ncol=8)
L = chol(M)
nvars = dim(L)[1]
r = t(L) %*% matrix(rnorm(nvars*N), nrow=nvars, ncol=N)
r = t(r)
u <- pnorm(r)
y1=r[,1]
x2=qbern(u[,2],0.5)
x3=qbern(u[,3],0.5)
x4=qbern(u[,4],0.5)
x5=qbern(u[,5],0.5)
x6=qbern(u[,6],0.5)
x7=qbern(u[,7],0.5)
x8=qbern(u[,8],0.5)
x1<-rnorm(N)
data = as.data.frame(cbind(y1,x1,x2,x3,x4,x5,x6,x7,x8))
return(data)
}
DataGenListBinNorm <- list(dataGen1,dataGen2,dataGen3,dataGen4,dataGen5,dataGen6,dataGen7)
#### Simulation part ####
## Here is SD=FALSE
## General for all
finalresultNorm1<-c()
finalresultNormBin1<-c()
finalresultBin1<-c()
finalresultBinNorm1<-c()
## Normal simulation ##
for(j in 1:length(DataGenListNorm)){
res = mapply(function(x) mean(replicate(rep, phackingInteraction(DataGenListNorm[[j]](x),"y1","x1",SD=TRUE,Per=TRUE))), x=sample)
result = data.frame(sample,res,j)
names(result)<-c("SampleSize","Pr","IndependentVariables")
finalresultNorm1=rbind(result,finalresultNorm1)
}
## Bin simulation ##
for(j in 1:length(DataGenListBin)){
res = mapply(function(x) mean(replicate(rep, phackingInteraction(DataGenListBin[[j]](x),"y1","x1",SD=TRUE,Per=TRUE))), x=sample)
result = data.frame(sample,res,j)
names(result)<-c("SampleSize","Pr","IndependentVariables")
finalresultBin1=rbind(result,finalresultBin1)
}
## Normal and Bin. H_1 simulation ##
for(j in 1:length(DataGenListNormBin)){
res = mapply(function(x) mean(replicate(rep, phackingInteraction(DataGenListNormBin[[j]](x),"y1","x1",SD=TRUE,Per=TRUE))), x=sample)
result = data.frame(sample,res,j)
names(result)<-c("SampleSize","Pr","IndependentVariables")
finalresultNormBin1=rbind(result,finalresultNormBin1)
}
## Bin and Normal H_1 simulation ##
for(j in 1:length(DataGenListBinNorm)){
res = mapply(function(x) mean(replicate(rep, phackingInteraction(DataGenListBinNorm[[j]](x),"y1","x1",SD=TRUE,Per=TRUE))), x=sample)
result = data.frame(sample,res,j)
names(result)<-c("SampleSize","Pr","IndependentVariables")
finalresultBinNorm1=rbind(result,finalresultBinNorm1)
}
#### Figures ####
## Normal ##
figureNormal <-ggplot(aes(x=SampleSize, y=Pr, group=IndependentVariables, colour=IndependentVariables), data=finalresultNorm)+
geom_line(aes(colour=as.factor(IndependentVariables))) +
geom_point(aes(colour=as.factor(IndependentVariables)))+
scale_color_grey()+
theme_bw()+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
ylab("Percent of simulations with at least one model with significant random variable")+
xlab("Sample size")+
labs(colour = "Number of Predictors") +
ggtitle("Normal")+
theme_classic()
figureNormal
## Bin ##
figureBin <-ggplot(aes(x=SampleSize, y=Pr, group=IndependentVariables, colour=IndependentVariables), data=finalresultBin)+
geom_line(aes(colour=as.factor(IndependentVariables))) +
geom_point(aes(colour=as.factor(IndependentVariables)))+
scale_color_grey()+
theme_bw()+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
ylab("Percent of simulations with at least one model with significant random variable")+
xlab("Sample size")+
labs(colour = "Number of Predictors") +
ggtitle("All 1/0")+
theme_classic()
figureBin
## Normal IV and H_1 bin ##
figureNormBin <-ggplot(aes(x=SampleSize, y=Pr, group=IndependentVariables, colour=IndependentVariables), data=finalresultNormBin)+
geom_line(aes(colour=as.factor(IndependentVariables))) +
geom_point(aes(colour=as.factor(IndependentVariables)))+
scale_color_grey()+
theme_bw()+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
ylab("Percent of simulations with at least one model with significant random variable")+
xlab("Sample size")+
labs(colour = "Number of Predictors") +
ggtitle("All normal, H_1 1/0")+
theme_classic()
figureNormBin
## Normal H_1 and IV bin ##
figureBinNorm <-ggplot(aes(x=SampleSize, y=Pr, group=IndependentVariables, colour=IndependentVariables), data=finalresultBinNorm)+
geom_line(aes(colour=as.factor(IndependentVariables))) +
geom_point(aes(colour=as.factor(IndependentVariables)))+
scale_color_grey()+
theme_bw()+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
ylab("Percent of simulations with at least one model with significant random variable")+
xlab("Sample size")+
labs(colour = "Number of Predictors") +
ggtitle("All 1/0, H_1 normal")+
theme_classic()
figureBinNorm
